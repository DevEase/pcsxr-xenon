#if 0
//
// Generated by 2.0.20353.0
//
//   fxc /Fh xbr_5x_psx_vs.h /Tvs_3_0 5xBR-v3.5-psx.cg /Exbr5x_vs_main
//
//
// Parameters:
//
//   float2 screenSize;
//   float2 settings_texture_size;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   screenSize            c1       1
//   settings_texture_size c4       1
//

// Shader type: vertex 

xvs_3_0
defconst screenSize, float, vector, [1, 2], c1
defconst settings_texture_size, float, vector, [1, 2], c4
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=3
config VsResource=1
// VsExportCount=2

dcl_index r0.x
dcl_texcoord o0.xy
dcl_texcoord1 o1
dcl_color o2

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec
    vfetch r2._xyz, r0.x, position
    vfetch r1.xy__, r0.x, texcoord
    vfetch r0, r0.x, color
    alloc position
    exec
    rcp r1.z, c1.y
    add r3.xy, r2.yz, r2.yz
  + rcp r1.w, c1.x
    mad oPos.x001, r3.x, r1.w, -c255.x
    mul r2.x, r3.y, r1.z
    add oPos.yz, -r2.xxw, c255.x
    alloc interpolators
    exece
    rcp o1.x000, c4.x
    rcp o1.w, c4.y
    mov o0.xy, r1.xy
    mov o2, r0

// PDB hint 00000000-00000000-00000000

#endif

// This microcode is in native DWORD byte order.

const DWORD g_xvs_xbr5x_vs_main[] =
{
    0x102a1101, 0x0000012c, 0x00000100, 0x00000000, 0x00000024, 0x000000b4, 
    0x000000dc, 0x00000000, 0x00000000, 0x0000008c, 0x0000001c, 0x0000007d, 
    0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 0x00000076, 0x00000044, 
    0x00020001, 0x00010000, 0x00000050, 0x00000000, 0x00000060, 0x00020004, 
    0x00010000, 0x00000050, 0x00000000, 0x73637265, 0x656e5369, 0x7a6500ab, 
    0x00010003, 0x00010002, 0x00010000, 0x00000000, 0x73657474, 0x696e6773, 
    0x5f746578, 0x74757265, 0x5f73697a, 0x65007673, 0x5f335f30, 0x00322e30, 
    0x2e323033, 0x35332e30, 0x00ababab, 0x00000000, 0x00000001, 0x00000000, 
    0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000040, 0x000000c0, 0x00210003, 0x00000000, 0x00000000, 
    0x00002863, 0x00000001, 0x00000003, 0x00000004, 0x00000290, 0x00100003, 
    0x00005004, 0x0030a005, 0x00003050, 0x0001f151, 0x0003f2a0, 0x0000100d, 
    0x0000000b, 0x0000100c, 0x0000100e, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x3f800000, 0x00000000, 0x00000000, 
    0x00000000, 0x70153003, 0x00001200, 0xc2000000, 0x00005006, 0x00001200, 
    0xc4000000, 0x0000400b, 0x00002200, 0x00000000, 0x05f82000, 0x00000447, 
    0x00000000, 0x05f81000, 0x00000fc8, 0x00000000, 0x05f80000, 0x00000688, 
    0x00000000, 0x4c400100, 0x000000b1, 0xc2000001, 0x4c830103, 0x00c5c56c, 
    0xc0020201, 0xc889c03e, 0x016c1b6c, 0xcb0301ff, 0xc8010002, 0x00b1c600, 
    0xe1030100, 0xc806803e, 0x041c6c00, 0xa002ff00, 0x4c10c001, 0x0000006c, 
    0xc2000004, 0x4c808001, 0x000000b1, 0xc2000004, 0xc8038000, 0x00b0b000, 
    0xe2010100, 0xc80f8002, 0x00000000, 0xe2000000, 0x00000000, 0x00000000, 
    0x00000000
};
